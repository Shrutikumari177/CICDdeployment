_schema-version: "3.1"
ID: nautical
description: Multi-tenant App for GMS.
version: 1.0.1
modules:
- name: nautical-srv
  type: nodejs
  path: gen/srv
  requires:
  - name: nautical-destination
  - name: nautical-connectivity
  - name: nautical-auth
  - name: nautical-db
  - name: nautical-registry
  - name: nautical-approuter-api
    properties:
      SUBSCRIPTION_URL: ~{app-protocol}://\${tenant_subdomain}-${default-uri}
  provides:
  - name: nautical-srv-api
    properties:
      srv-url: ${default-url}
  - name: srv-api
    properties:
      srv-url: ${default-url}
  parameters:
    buildpack: nodejs_buildpack
  build-parameters:
    builder: npm
    ignore:
    - node_modules/
- name: nautical-app-content
  type: com.sap.application.content
  path: .
  requires:
  - name: nautical-html-repo-host
    parameters:
      content-target: true
  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - comingenxnautimasterdashboard.zip
      name: comingenxnautimasterdashboard
      target-path: resources/
    - artifacts:
      - comingenxnauticreatevoyage.zip
      name: comingenxnauticreatevoyage
      target-path: resources/
    - artifacts:
      - comingenxnautichartering.zip
      name: comingenxnautichartering
      target-path: resources/
- name: nautical-comingenxnautimasterdashboard
  type: html5
  path: app/masterdashboard
  requires:
  - name: nautical-auth
  - name: nautical-destination
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: nautical-comingenxnauticreatevoyage
  type: html5
  path: app/createvoyage
  requires:
  - name: nautical-auth
  - name: nautical-destination
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: nautical-comingenxnautichartering
  type: html5
  path: app/chartering
  requires:
  - name: nautical-auth
  - name: nautical-destination
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: nautical-approuter
  type: approuter.nodejs
  path: approuter
  properties:
    TENANT_HOST_PATTERN: ^(.*)-dev-nautical-approuter.cfapps.eu10-004.hana.ondemand.com
  requires:
  - name: nautical-html-repo-runtime
  - name: nautical-auth
  - name: nautical-destination
  - name: nautical-srv-api
  provides:
  - name: nautical-approuter-api
    properties:
      app-protocol: ${protocol}
      app-uri: ${default-url}
  parameters:
    buildpack: nodejs_buildpack
    disk-quota: 256M
    keep-existing-routes: true
    memory: 256M
    routes:
    - route: https://*-dev-nautical-approuter.cfapps.eu10-004.hana.ondemand.com
  build-parameters:
    ignore:
    - node_modules/
- name: nautical-managed-fiori-destination-content
  type: com.sap.application.content
  requires:
  - name: nautical-srv-api
  - name: nautical-auth
    parameters:
      service-key:
        name: nautical-auth-key
  - name: nautical-html-repo-host
    parameters:
      service-key:
        name: nautical-html-repo-host-key
  - name: nautical-destination
    parameters:
      content-target: true
  parameters:
    content:
      instance:
        destinations:
        - Name: nautical-destination-html5
          ServiceInstanceName: nautical-html-repo-host
          ServiceKeyName: nautical-html-repo-host-key
          sap.cloud.service: nauticalMasterSrv
        - Authentication: OAuth2UserTokenExchange
          Name: nautical-destination-uaa
          ServiceInstanceName: nautical-auth
          ServiceKeyName: nautical-auth-key
          sap.cloud.service: nauticalMasterSrv
        existing_destinations_policy: update
    service: destination
    service-name: nautical-destination
    service-plan: lite
  build-parameters:
    no-source: true
- name: comingenxnautimasterdashboard
  type: html5
  path: app/masterdashboard
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: comingenxnautichartering
  type: html5
  path: app/chartering
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: comingenxnauticreatevoyage
  type: html5
  path: app/createvoyage
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
resources:
- name: nautical-destination
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      HTML5Runtime_enabled: true
      init_data:
        instance:
          destinations:
          - Authentication: NoAuthentication
            Name: ui5
            ProxyType: Internet
            Type: HTTP
            URL: https://ui5.sap.com
          - Authentication: NoAuthentication
            HTML5.DynamicDestination: true
            HTML5.ForwardAuthToken: true
            Name: nautical-srv-api-dest
            ProxyType: Internet
            Type: HTTP
            URL: ~{nautical-srv-api/srv-url}
          - Authentication: NoAuthentication
            HTML5.DynamicDestination: true
            HTML5.ForwardAuthToken: true
            Name: nautical-srv-api
            ProxyType: Internet
            Type: HTTP
            URL: ~{srv-api/srv-url}
          existing_destinations_policy: update
    service: destination
    service-plan: lite
  requires:
  - name: nautical-srv-api
  - name: srv-api
- name: nautical-connectivity
  type: org.cloudfoundry.managed-service
  parameters:
    service: connectivity
    service-plan: lite
- name: nautical-auth
  type: org.cloudfoundry.managed-service
  parameters:
    path: ./xs-security.json
    service: xsuaa
    service-plan: application
- name: nautical-html-repo-host
  type: org.cloudfoundry.managed-service
  parameters:
    build-parameters:
      before-all:
      - builder: custom
        commands:
        - npx cds build --production
    config:
      sizeLimit: 2
    deploy_mode: html5-repo
    enable-parallel-deployments: true
    service: html5-apps-repo
    service-plan: app-host
- name: nautical-html-repo-runtime
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-runtime
- name: nautical-registry
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      appName: nautical
      appUrls:
        callbackTimeoutMillis: 600000
        getDependencies: ~{nautical-srv-api/srv-url}/-/cds/saas-provisioning/dependencies
        onSubscription: ~{nautical-srv-api/srv-url}/-/cds/saas-provisioning/tenant/{tenantId}
        onSubscriptionAsync: true
        onUnSubscriptionAsync: true
        onUpdateDependenciesAsync: true
      category: Category
      description: Ingenx Nautical
      displayName: Ingenx Nautical
      xsappname: nautical
    service: saas-registry
    service-plan: application
  requires:
  - name: nautical-srv-api
- name: nautical-db
  type: org.cloudfoundry.managed-service
  parameters:
    service: service-manager
    service-plan: container
parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
  - builder: custom
    commands:
    - npx cds build --production
